
@{
    ViewBag.Title = "CustomerDetailsReport";
}
<style>
    .toast-top-center {
        top: 20%;
        margin: 0 auto;
        left: 20%;
    }
</style>

<div class="form-horizontal">
    <div class="row">
        <div class="col-sm-12 col-md-3">
            <div class="form-group">
                <label for="frmDate">From Date:</label>
                <div>
                    <input type="text" id="frmDate" class="form-control datepicker" style="max-width:80%;display:inline;margin-right:3px;background-color:white" readonly />
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-3">
            <div class="form-group">
                <label for="toDate" style="text-align:center">To Date:</label>
                <div>
                    <input type="text" id="toDate" name="toDate" class="form-control datepicker" style="max-width:80%;display:inline;margin-right:3px;background-color:white" readonly />
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-3">
            <div class="form-group">
                <label for="toDate" style="text-align:center">Customer:</label>
                <div>
                    <select id="drpCustomer" class="form-control" style="width:80%">
                    </select>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-3">
            <div class="form-group">
                <label style="visibility:hidden">HiddenToMainTainStyle</label>
                <br />
                <button type="button" class="btn btn-sm btn-outline-primary" style="font-size:15px" onclick="ShowCustomerDetailsReport()">
                    <i class="fas fa-search"></i>
                    Show Data
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary" style="font-size:15px" onclick="ExportCustomerDetailsReport()">
                    <i class="fas fa-save"></i>
                    Export
                </button>
            </div>
        </div>
    </div>
</div>
<div class="card shadow-lg" id="main-div" style="display:none">
    <div class="card-header">
        <h6 class="m-0 font-weight-bold text-primary">Customer Report</h6>
    </div>
    <div class="card-body">

        <div class="table-responsive" id="divCustomerDetailsReport">
        </div>
    </div>
</div>
@section scripts {
    <script src="https://cdn.datatables.net/rowgroup/1.1.2/js/dataTables.rowGroup.min.js"></script>
    <script>

        $(document).ready(function () {
            ConfigureDatePicker();
            GetCustomerData();

        });

        function GetCustomerData() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCustomerData","Customer")',
                success: function (response) {
                    if (response.Success) {
                          var htmlCustomer = "<option value=" + 0 + ">All Customers</option>";
                        response.Data.filter(function (item) {
                            htmlCustomer += GenrateDropDown(item.Id, (item.SerialNo + ' ' + item.FirstName + ' ' + (item.LastName == null ? "" : item.LastName)));
                        });
                        $("#drpCustomer").html(htmlCustomer);
                    }
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        function GenrateDropDown(value, text) {
           return "<option value=" + value + ">" + text + "</option>";
        }

        function ShowCustomerDetailsReport() {
            var frmDate = $("#frmDate").val();
            var toDate = $("#toDate").val();
            var customerId = $("#drpCustomer").val();
            if (!customerId ) {
                customerId = 0;
            }
            var postData = {
                fromDate: ConvertDateToDDMMYY(frmDate),
                toDate: ConvertDateToDDMMYY(toDate),
                customerId:customerId
            };
            if (customerId == 0) {

                var Order = 1;
                var amountCol = 6;
                var qty = 4;
            } else {
                var Order = 2;
                var amountCol = 5;
                var qty = 3;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("ShowCustomerDetailsReport","Reports")',
                data: JSON.stringify(postData),
                contentType: "application/json",
                success: function (response) {
                    if (response.Success) {
                        $("#main-div").show();
                        var strHtml = `<table class="table table-bordered" id="tblCustomerDetailsReport">
                                    <thead class="success">
                                        <tr>
                                            <th>Date</th>`;
                        if (customerId == 0) {
                            strHtml += `<th>Customer</th>`;
                        }


                        strHtml += `<th>Shift</th><th>Product</th>
                                        <th>Qty</th>
                                        <th>Rate</th>
                                         <th>Amount</th>
                                        </tr>
                                    </thead>`;
                        JSON.parse(response.Data)[0].forEach(function (item) {
                            strHtml += `<tr>
                                   <td>${item.OrderDate}</td>`;

                            if (customerId == 0) {
                                strHtml += `<td>${item.CustomerName}</td>`;
                            }
                            strHtml += `<td>${item.Shift}</td>
                                   <td>${item.ProductName}</td>
                                   <td class="text-center">${item.Quantity}</td>
                                   <td class="text-right">${financial(item.Price)}</td>
                                   <td class="text-right">${financial(item.Total)}</td>
                               </tr>`;
                        });
                        strHtml += `
                          <tfoot>
                                 <tr>
                                     <th colspan="${amountCol}" style="text-align:right">Total:</th>
                                     <th></th>
                                 </tr>
                             </tfoot>

                         </table>`;
                        $("#divCustomerDetailsReport").html(strHtml);
                        $('#tblCustomerDetailsReport').addClass("table-striped");


                        var table =  $('#tblCustomerDetailsReport').DataTable({
                            "pageLength": 50,
                            order: [[Order, 'asc'], [0, 'desc']],
                            rowGroup: {
                                endRender: function (rows, group) {

                                    var amount = rows
                                        .data()
                                        .pluck(amountCol)
                                        .reduce(function (a, b) {
                                            return a + b * 1;
                                        },0);
                                  //  amount = $.fn.dataTable.render.number(',', '.', 0, '₹').display(amount.toFixed(2));

                                    var Totalqty = rows
                                        .data()
                                        .pluck(qty)
                                        .reduce(function (a, b) {
                                            return a + b * 1;
                                        },0);
                                    if (customerId == 0) {
                                        return $('<tr/>')
                                            .append('<td colspan="3"><b>' + group + '</b></td>')
                                            .append('<td class="text-center" ></td>')
                                            .append('<td class="text-center"><b>' + Totalqty.toFixed(2) + '</b></td>')
                                            .append('<td></td>')
                                            .append('<td class="text-right"><b>₹' + amount.toFixed(2) + '</b></td>')
                                    } else {
                                        return $('<tr/>')
                                            .append('<td colspan="3"><b>' + group + '</b></td>')
                                            .append('<td class="text-center"><b>' + Totalqty.toFixed(2) + '</b></td>')
                                            .append('<td></td>')
                                            .append('<td class="text-right"><b>₹' + amount.toFixed(2) + '</b></td>')
                                    }

                                },
                                startRender: null,
                                dataSrc: (Order)
                            },

                            "footerCallback": function (row, data, start, end, display) {
                                var api = this.api(), data;

                                // Remove the formatting to get integer data for summation
                                var intVal = function (i) {
                                    return typeof i === 'string' ?
                                        i.replace(/[\$,]/g, '') * 1 :
                                        typeof i === 'number' ?
                                            i : 0;
                                };

                                // Total over all pages
                                total = api
                                    .column(amountCol)
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                // Total over this page
                                pageTotal = api
                                    .column(amountCol, { page: 'current' })
                                    .data()
                                    .reduce(function (a, b) {
                                        return intVal(a) + intVal(b);
                                    }, 0);

                                // Update footer
                                $(api.column(amountCol).footer()).html(
                                    '₹' + total
                                );
                            }
                        });

                    }
                },
                error: function (error) {
                    alert(error.responseText);
                }
            });
        }
        function ExportCustomerDetailsReport() {
           var frmDate = $("#frmDate").val();
            var toDate = $("#toDate").val();
            var customerId = $("#drpCustomer").val();
            var customerName = $("#drpCustomer option:selected").text();
            customerName = customerName.replace(/ /g, '');
            var fileName = customerName+"_" + frmDate.toString()+"_" + toDate.toString()+".pdf";
            if (!customerId) {
                customerId = 0;
            }
            var postData = {
                fromDate: ConvertDateToDDMMYY(frmDate),
                toDate: ConvertDateToDDMMYY(toDate),
                customerId:customerId
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("ExportCustomerDetailsReport","Reports")',
                data: JSON.stringify(postData),
                contentType: "application/json",
                xhr: function () {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 2) {
                            if (xhr.status == 200) {
                                xhr.responseType = "blob";
                            } else {
                                xhr.responseType = "text";
                            }
                        }
                    };
                    return xhr;
                },
                success: function (response) {
                  downloadFile(new Blob([response], {type: 'application/text'}),fileName );

                },
                error: function (error) {
                    alert(error.responseText);
                }
            });

        }

        // #region   Configurtion for Jqyery Datepicker
        function ConfigureDatePicker() {
             var today = new Date();
            var previoisMonthDate = new Date(new Date().getFullYear(), new Date().getMonth() - 1, new Date().getDate());

            $("#frmDate").datepicker({
                showOn: 'button',
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd/mm/yy',
            })
             .next('button').button({
                    icons: {
                    primary: 'ui-icon-calendar'
                },
                text: false
             });

            $("#frmDate").datepicker("setDate", previoisMonthDate)
             .on("change", function () {

                });

            $("#toDate").datepicker({
                showOn: 'button',
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd/mm/yy'
            }).next('button').button({
                    icons: {
                    primary: 'ui-icon-calendar'
                  }, text:false
            });

            $("#toDate").datepicker("setDate", today)
              .on("change", function () {

              });
        }
        // #endregion

        function downloadFile(blob, fileName) {
                  const link = document.createElement('a');
                  // create a blobURI pointing to our Blob
                  link.href = URL.createObjectURL(blob);
                  link.download = fileName;
                  // some browser needs the anchor to be in the doc
                  document.body.append(link);
                  link.click();
                  link.remove();
                  // in case the Blob uses a lot of memory
                  setTimeout(() => URL.revokeObjectURL(link.href), 7000);
        };
    </script>
}
